body,
body * {
    margin: 0;
    padding: 0;
    vertical-align: top;
    box-sizing: border-box;
}

body{
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;
}


/*RESPONSIVE*/

.red{
    width: 1000px;
    margin-left: calc(50% - 500px);
    background-color: rgb(255, 0, 255);
    font-size: 20px;
}



@media screen and (width: 1100px) {
    .red{
        width: 800px;
        margin-left: calc(50% - 400px);
        background-color: rgb(254, 126, 5);
    }
}

/*@media screen and (max-width: 1100px) {
    .red{
        width: 800px;
        margin-left: calc(50% - 400px);
        background-color: rgb(254, 126, 5);
    }
}*/

@media (max-width: 900px) {
    .red{
        width: 600px;
        margin-left: calc(50% - 300px);
        background-color: rgb(9, 255, 206);
    }
}

@media (max-width: 700px) {
    .red{
        width: 400px;
        margin-left: calc(50% - 200px);
        background-color: rgb(167, 5, 254);
    }
}

@media (max-width: 460px) {
    .red{
        width: 100%;
        margin-left: 0;
        padding: 20px;
        background-color: rgb(246, 254, 5);
    }
}


/*BUTTONS*/

.row.btn-list {
    gap: 1rem;
    align-items: flex-start;
    justify-content: flex-start;
    margin-bottom: 1rem;
}

.btn {
    display: inline-block;
    padding: 1em 2em;
    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS',
        sans-serif;
    font-size: 1.25rem;
    line-height: 1em;
    background-color: #ea1e63;
    color: #fff;
    font-weight: normal;
    text-decoration: none;
    border-radius: 0.4em;
    border: none;
    cursor: pointer;
    user-select: none;
}
.btn:hover {
    background-color: #c31851;
}

.btn.btn-big {
    font-size: 2rem;
}
.btn.btn-small {
    font-size: 0.7rem;
}

.btn.btn-yellow {
    background-color: #ffff00;
    color: #111;
}
.btn.btn-yellow:hover {
    background-color: #d3d303;
    color: #111;
}
.btn.btn-green {
    background-color: #00ff00;
    color: #111;
}
.btn.btn-green:hover {
    background-color: #00d300;
    color: #111;
}

.btn.btn-squar {
    border-radius: 0;
}
.btn.btn-rounder {
    border-radius: 1em;
}
.btn.btn-stadium {
    border-radius: 1.5em;
}


/*ANIMATION*/

.toggle-switch{
    display: flex;
    align-items: center;
    background: linear-gradient(to right, #1560bd, #e600ee);
    border-radius: 40px;
    height: 60px;
    width: 120px;
    transition: 1s;
    transform: translate(50%, 50%);
    animation-direction: alternate;
}

.toggle-switch::before{
    content: '';
    width: 40px;
    height: 40px;
    display: block;
    animation-direction: alternate;
    border: none;
    background-color: #ffffff;
    border-radius: 50%;
    animation-name: switch;
    animation-duration: 0.9s;
    animation-iteration-count: infinite;
  }

  .toggle-switch:hover::before{
    animation-play-state: paused;
}

  @keyframes switch {
    0%{
        margin-left: 1em;
        background-color: #c602fd;
    }
    100%{
        margin-left: 4em;
        background-color: #5910f5;
    }
}

.circle{
    margin-left: 30%;
    background-color: black;
    width: 80px;
    height: 150px;
    font-size: 18px;
    border: 0.25em solid white;
    border-radius: 1em;
    transition: all 1s;
}

.circle::before{
    content: '';
    background-color: #fff;
    display: block;
    width: 40px;
    height: 40px;
    margin-left: calc(50% - 20px);
    margin-top: 0.6em;
    border-radius: 20%;
    animation-name: scroll;
    animation-duration: 0.9s;
    animation-iteration-count: infinite;
}

.circle::after{
    content: '';
    background-color: #fff;
    display: block;
    width: 40px;
    height: 40px;
    margin-left: calc(50% - 20px);
    margin-top: 0.3em;
    border-radius: 20%;
    animation-name: scroll;
    animation-duration: 0.9s;
    animation-iteration-count: infinite;
}

.circle:hover::before{
    animation-play-state: paused;
}

@keyframes scroll {
    0%{
        margin-top: 0.6em;
    }
    100%{
        margin-top: 1.5em;
    }
}


/*POSITION*/

/*.main-element {
    position: relative;
    left: 10px;
    bottom: 10px;
    background-color: yellow;
    padding: 10px;
}

.sibling-element {
    padding: 10px;
    background-color: #f2f2f2;
}*/

.parent-element {
    position: relative;
    height: 100px;
    padding: 10px;
    background-color: #81adc8;
}

.main-element {
    position: absolute;
    left: 10px;
    bottom: 10px;
    background-color: yellow;
    padding: 10px;
}

.sibling-element {
	background: #f2f2f2;
	padding: 10px;
    border: 1px solid #81adc8;
} 

html {
    height: 800px;
}

/*
position: static;
left: 10px;
bottom: 10px;

kairiosios ir apatinės savybės neturi 
įtakos elementui su position: static.

position: relative;
left: 10px;
bottom: 10px;

kairiosios ir apatinės savybės dabar 
turi įtakos elemento vietai. 

position: fixed;
jis lieka toje pacioje vietoje kai slenki i apacia jis juda kartu kiek html plocio.

position: absolute;

position: sticky
Jis veikia kaip santykinai išdėstytas elementas iki tam tikro
 slinkties taško ir tada veikia kaip fiksuotas elementas. 

*/